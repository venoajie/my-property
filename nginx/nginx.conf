# nginx/nginx.conf

user  nginx;

events {
    worker_connections  1024;
}

http {
    # Basic configuration
    include               /etc/nginx/mime.types;
    default_type          application/octet-stream;
    keepalive_timeout     75s;
    sendfile              on;

    # Access logs configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log main;
    error_log   /var/log/nginx/error.log warn;

    # Security headers (applied globally)
    add_header X-Content-Type-Options   "nosniff"    always;
    add_header X-Frame-Options          "DENY"       always;
    add_header Content-Security-Policy  "default-src 'self'";
    add_header Referrer-Policy          "strict-origin-when-cross-origin";

    # SSL optimization (shared context)
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";
    ssl_session_timeout         1d;
    ssl_session_cache           shared:MozSSL:10m;
    ssl_stapling                on;
    ssl_stapling_verify         on;
    resolver                    8.8.8.8 1.1.1.1 valid=300s;

    # Host validation map (matches Django ALLOWED_HOSTS)
    map $host $valid_domain {
        ~^(?<domain>[^:]+)  $domain;
        default             "";
    }

    # Blocked hosts logging
    map $valid_domain $blocked_host {
        ~^(130\.61\.246\.120|localhost|127\.0\.0\.1)$  0;
        default                                        1;
    }

    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name 130.61.246.120;
        
        # SSL certificates
        ssl_certificate         /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key     /etc/nginx/ssl/privkey.pem;
        ssl_dhparam             /etc/nginx/ssl/dhparam.pem;

        # Block invalid hosts
        if ($blocked_host) {
            return 444;
        }

        # Separate access log for blocked requests
        access_log /var/log/nginx/blocked_hosts.log main if=$blocked_host;

        location / {
            proxy_pass http://web:8000;
            
            # Secure proxy headers
            proxy_set_header    Host               $host;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto  $scheme;
            proxy_set_header    X-Forwarded-Host   $host;

            # Security limits
            client_max_body_size    10M;
            proxy_read_timeout      30s;
        }
    }
}