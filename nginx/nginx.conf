# nginx/nginx.conf
# Purpose: Secure reverse proxy for Django application
# Security Features: HTTPS enforcement, HSTS, CSP, IP filtering, .git protection

# Global configuration
user nginx;
worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    # Basic performance tuning
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75s;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME type configuration
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Security headers (applied globally)
    add_header X-Content-Type-Options   "nosniff"          always;
    add_header X-Frame-Options          "DENY"             always;
    add_header X-XSS-Protection         "1; mode=block"    always;
    add_header Content-Security-Policy  "default-src 'self'; frame-ancestors 'none'" always;
    add_header Referrer-Policy          "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy       "geolocation=(), microphone=(), camera=()" always;

    # SSL optimization (TLS 1.3 ready)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 1.1.1.1 valid=300s;

    # Rate limiting (uncomment to enable)
    # limit_req_zone $binary_remote_addr zone=main:10m rate=100r/s;

    # HARDCODED: Replace with your domain name
    map $host $valid_domain {
        ~^(?<domain>[^:]+)  $domain;
        default "";
    }

    # HARDCODED: Update with production domains/IPs
    map $valid_domain $blocked_host {
        ~^(130\.61\.246\.120|localhost|127\.0\.0\.1)$ 0;
        default 1;
    }

    # HTTP server (redirect to HTTPS)
    server {
        listen 80 default_server;
        server_name _;
        
        # Security headers for HTTP
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Redirect all HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name 130.61.246.120;  # HARDCODED: Replace with domain name
        
        # SSL certificate paths
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # HSTS settings (preload only after confirmation)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Block invalid hosts
        if ($blocked_host) {
            access_log /var/log/nginx/blocked_hosts.log main;
            return 444;
        }

        # Block access to .git directories
        location ~ /\.git {
            deny all;
            return 403;
        }

        # Main proxy configuration
        location / {
            proxy_pass http://django-app:8000;
            
            # Security proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            # Security limits
            client_max_body_size 10M;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;

            # Buffering settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 16k;
            proxy_busy_buffers_size 32k;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Static files caching
        location /static/ {
            alias /app/staticfiles/;
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK";
        }
    }
}